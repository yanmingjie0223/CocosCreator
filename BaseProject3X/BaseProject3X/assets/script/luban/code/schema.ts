
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


import ByteBuf from '../bright/serialization/ByteBuf'





export namespace ncb {
export class Global {

    constructor(_buf_: ByteBuf) {
        this.TestCount = _buf_.ReadInt()
    }

    /**
     * 测试
     */
    readonly TestCount: number

    resolve(tables:Tables) {
        
    }
}

}



export namespace ncb {
export class TbGlobal {
    private _dataMap: Map<number, ncb.Global>
    private _dataList: ncb.Global[]
    constructor(_buf_: ByteBuf) {
        this._dataMap = new Map<number, ncb.Global>()
        this._dataList = []
        for(let n = _buf_.ReadInt(); n > 0; n--) {
            let _v: ncb.Global
            _v = new ncb.Global(_buf_)
            this._dataList.push(_v)
            this._dataMap.set(_v.TestCount, _v)
        }
    }

    getDataMap(): Map<number, ncb.Global> { return this._dataMap; }
    getDataList(): ncb.Global[] { return this._dataList; }

    get(key: number): ncb.Global | undefined {
        return this._dataMap.get(key); 
    }

    resolve(tables:Tables) {
        for(let  data of this._dataList)
        {
            data.resolve(tables)
        }
    }

}
}



type ByteBufLoader = (file: string) => ByteBuf

export class Tables {
    private _TbGlobal: ncb.TbGlobal
    get TbGlobal(): ncb.TbGlobal  { return this._TbGlobal;}

    static getTableNames(): string[] {
        let names: string[] = [];
        names.push('ncb_tbglobal');
        return names;
    }

    constructor(loader: ByteBufLoader) {
        this._TbGlobal = new ncb.TbGlobal(loader('ncb_tbglobal'))

        this._TbGlobal.resolve(this)
    }
}

